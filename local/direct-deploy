#!/bin/sh

ENV=$1

PROJECT_DIR=~/Developer/bankrupt/project-bankrupt
echo 'Current Directory: ' && echo $PROJECT_DIR
cd "$PROJECT_DIR" || exit;

# Checkout to dev
if [ -z "$(git status --porcelain)" ]; then
    # Working directory is clean, perform git checkout "$ENV"
    if [ "$ENV" = 'prod' ]; then
        git checkout master
    elif [ "$ENV" = 'dev' ] || [ "$ENV" = 'stag' ]; then
      git checkout "$ENV"
    else
      echo "Err: env must be one of these items -> dev | stag | prod"
      exit
    fi
else
    # Working directory is not clean, print a message or handle accordingly
    echo "Error: There are uncommitted changes in the working directory."
    exit
fi

#BUILD
mvn -f pom.xml clean package -Denv="$ENV" -DskipTests || exit

printf "\n ..... Building docker image ..... \n"
docker buildx build --platform linux/x86_64 -t sayemoid/cognito_"$ENV":latest $PROJECT_DIR --push
#docker build -t sayemoid/cognito_"$ENV" $PROJECT_DIR
#mkdir -p $PROJECT_DIR/target
#docker save -o $PROJECT_DIR/target/cognito_"$ENV".tar sayemoid/cognito_"$ENV"

# UPLOAD TO SERVER
#~/.ssh/bankrupt/exec rm /var/cognito/deployment/cognito_"$ENV".tar
#~/.ssh/bankrupt/scp/uploadfile $PROJECT_DIR/target/cognito_"$ENV".tar /var/cognito/deployment/cognito_"$ENV".tar
~/.ssh/bankrupt/scp/uploadfile $PROJECT_DIR/compose/"$ENV"/app.yml /var/cognito/deployment/app_"$ENV".yml

# DEPLOY
~/.ssh/bankrupt/execfile $PROJECT_DIR/scripts/local/deploy/"$ENV".sh